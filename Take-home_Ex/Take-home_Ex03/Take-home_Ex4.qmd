---
title: "Take-home_Ex03"
author: "Yuheng Liang"
format: html
editor: visual
date: "Oct 28, 2024"
date-modified: "Oct 28, 2024"
execute: 
  eval: true
  echo: true
  freeze: true
---

# Take home exe 03

## Data

-   Philippines data from [Armed Conflict Location & Event Data Project (ACLED)](https://acleddata.com/).

-   [Philippines boundary data](https://data.humdata.org/dataset/cod-ab-phl) from HDX

## Importing data and package

### package

-   spNetwork, which provides functions to perform Spatial Point Patterns Analysis such as kernel density estimation (KDE) and K-function on network. It also can be used to build spatial matrices (‘listw’ objects like in ‘spdep’ package) to conduct any kind of traditional spatial analysis with spatial weights based on reticular distances.
-   sf package provides functions to manage, processing, and manipulate Simple Features, a formal geospatial data standard that specifies a storage and access model of spatial geometries such as points, lines, and polygons.
-   tmap which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.
-   spatstat, which has a wide range of useful functions for point pattern analysis. In this hands-on exercise, it will be used to perform 1st- and 2nd-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.
-   raster which reads, writes, manipulates, analyses and model of gridded spatial data (i.e. raster). In this hands-on exercise, it will be used to convert image output generate by spatstat into raster format.
-   maptools which provides a set of tools for manipulating geographic data. In this hands-on exercise, we mainly use it to convert Spatial objects into ppp format of spatstat.

```{r}
pacman::p_load(sf, raster, spatstat, tmap, tidyverse,sparr,spNetwork,dplyr,animation,stringr)
```

### data

```{r}
drug_case <- read_csv("data/2016-01-01-2024-06-30-Philippines.csv")%>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_transform(crs = 32651) %>%
  mutate(event_date = dmy(event_date)) %>%
  mutate(event_month = year*100 + month(event_date)) %>%
  mutate(event_quarter = year*10 + quarter(event_date))%>%
  mutate(quarter = as.numeric(str_sub(event_quarter, 5, 5)))
```

import the boundary data

```{r}
ph_sf = st_read(dsn = "data/phl_adm_psa_namria_20231106_shp",layer = "phl_admbnda_adm2_psa_namria_20231106")
```

chack the crs

```{r}
st_crs(ph_sf)
```

transform the crs

```{r}
ph_sf = st_transform(ph_sf,crs = 32651)
st_crs(ph_sf)
```

```{r}
ph_sf_owin <-as.owin(ph_sf)
```

show the point

```{r}
tmap_mode('view')
tm_shape(drug_case)+tm_dots()
```

```{r}
tmap_mode('plot')
```

```{r}
hist(drug_case$year)
hist(drug_case$event_month)
```

```{r}
drug_case$fatalities <- as.numeric(drug_case$fatalities)

fatalities_by_year <- drug_case %>%
  group_by(year) %>%
  summarise(
    total_fatalities = sum(fatalities, na.rm = TRUE),
    average_fatalities = mean(fatalities, na.rm = TRUE),
    .groups = "drop"
  )

print(fatalities_by_year)
```

```{r}
cases_by_month <- drug_case %>%
  group_by(event_month) %>%
  summarise(case_count = n()) %>%
  arrange(event_month)

# 打印结果
print(cases_by_month)
```

```{r}

cases_by_quarter <- drug_case %>%
  group_by(event_quarter) %>%
  summarise(case_count = n()) %>%
  arrange(event_quarter)

print(cases_by_quarter)
```

```{r}
ggplot(cases_by_month, aes(x = event_month, y = case_count)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "case_month", x = "month", y = "num") +
  theme_minimal()

ggplot(cases_by_quarter, aes(x = event_quarter, y = case_count)) +
  geom_bar(stat = "identity", fill = "lightgreen") +
  labs(title = "case by q", x = "q", y = "num") +
  theme_minimal()
```

Excluding the third and fourth quarters of 2016 and the first two or three quarters of 2017 and the first two or two quarters of 2021 the distribution of the other years is fairly even not described as seasonal \## Spatial Point Analysis by year Screening of drug use data for each year

## 1st Order Spatial Point Patterns Analysis Methods

drug_case_1 \<- as_Spatial(drug_case) childcare_1_ppp \<- as.ppp(drug_case_1）

drug_case_2016_bw \<- density(drug_case_2016_ppp, sigma=bw.diggle, edge=TRUE, kernel="gaussian")

plot(drug_case_2016_bw)

kde_result \<- density(ppp_obj, sigma = bw.diggle, edge = TRUE, kernel = "gaussian") \## Spatio-Temporal Point Pattern Analysis by year

```{r}
drug_case_2016 <- drug_case %>%
  filter(year== 2016)
drug_case_2017 <- drug_case %>%
  filter(year== 2017)
drug_case_2018 <- drug_case %>%
  filter(year== 2018)
drug_case_2019 <- drug_case %>%
  filter(year== 2019)
drug_case_2020 <- drug_case %>%
  filter(year== 2020)
drug_case_2021 <- drug_case %>%
  filter(year== 2021)
drug_case_2022 <- drug_case %>%
  filter(year== 2022)
drug_case_2023 <- drug_case %>%
  filter(year== 2023)
drug_case_2024 <- drug_case %>%
  filter(year== 2024)
```

transform them into ppp objects.

```{r}
drug_case_2016_ppp <- as.ppp(drug_case_2016)
drug_case_2017_ppp <- as.ppp(drug_case_2017)
drug_case_2018_ppp <- as.ppp(drug_case_2018)
drug_case_2019_ppp <- as.ppp(drug_case_2019)
drug_case_2020_ppp <- as.ppp(drug_case_2020)
drug_case_2021_ppp <- as.ppp(drug_case_2021)
drug_case_2022_ppp <- as.ppp(drug_case_2022)
drug_case_2023_ppp <- as.ppp(drug_case_2023)
drug_case_2024_ppp <- as.ppp(drug_case_2024)
```

```{r}
drug_case_2016_ppp <- drug_case_2016_ppp[ph_sf_owin]
drug_case_2017_ppp <- drug_case_2017_ppp[ph_sf_owin]
drug_case_2018_ppp <- drug_case_2018_ppp[ph_sf_owin]
drug_case_2019_ppp <- drug_case_2019_ppp[ph_sf_owin]
drug_case_2020_ppp <- drug_case_2020_ppp[ph_sf_owin]
drug_case_2021_ppp <- drug_case_2021_ppp[ph_sf_owin]
drug_case_2022_ppp <- drug_case_2022_ppp[ph_sf_owin]
drug_case_2023_ppp <- drug_case_2023_ppp[ph_sf_owin]
drug_case_2024_ppp <- drug_case_2024_ppp[ph_sf_owin]
```

re-scale them to km

```{r}
drug_case_2016_ppp.km <- rescale.ppp(drug_case_2016_ppp, 1000, "km")
drug_case_2017_ppp.km <- rescale.ppp(drug_case_2017_ppp, 1000, "km")
drug_case_2018_ppp.km <- rescale.ppp(drug_case_2018_ppp, 1000, "km")
drug_case_2019_ppp.km <- rescale.ppp(drug_case_2019_ppp, 1000, "km")
drug_case_2020_ppp.km <- rescale.ppp(drug_case_2020_ppp, 1000, "km")
drug_case_2021_ppp.km <- rescale.ppp(drug_case_2021_ppp, 1000, "km")
drug_case_2022_ppp.km <- rescale.ppp(drug_case_2022_ppp, 1000, "km")
drug_case_2023_ppp.km <- rescale.ppp(drug_case_2023_ppp, 1000, "km")
drug_case_2024_ppp.km <- rescale.ppp(drug_case_2024_ppp, 1000, "km")
```

drug_case_2016_ppp_owin.csr \<- envelope(drug_case_2016_ppp.km, Gest, nsim = 99)

write_rds(drug_case_2016_ppp_owin.csr,"data/drug_case_2016_ppp_owin.rds")

drug_case_2017_ppp_owin.csr \<- envelope(drug_case_2017_ppp.km, Gest, nsim = 99)

drug_case_2018_ppp_owin.csr \<- envelope(drug_case_2018_ppp.km, Gest, nsim = 99) write.csv(drug_case_2018_ppp_owin.csr,"data/drug_case_2018_ppp_owin.rds") drug_case_2019_ppp_owin.csr \<- envelope(drug_case_2019_ppp.km, Gest, nsim = 99) write.csv(drug_case_2019_ppp_owin.csr,"data/drug_case_2019_ppp_owin.rds") drug_case_2020_ppp_owin.csr \<- envelope(drug_case_2020_ppp.km, Gest, nsim = 99) write.csv(drug_case_2020_ppp_owin.csr,"data/drug_case_2020_ppp_owin.rds") drug_case_2021_ppp_owin.csr \<- envelope(drug_case_2021_ppp.km, Gest, nsim = 99) write.csv(drug_case_2021_ppp_owin.csr,"data/drug_case_2021_ppp_owin.rds") drug_case_2022_ppp_owin.csr \<- envelope(drug_case_2022_ppp.km, Gest, nsim = 99) write.csv(drug_case_2022_ppp_owin.csr,"data/drug_case_2022_ppp_owin.rds") drug_case_2023_ppp_owin.csr \<- envelope(drug_case_2023_ppp.km, Gest, nsim = 99) write.csv(drug_case_2023_ppp_owin.csr,"data/drug_case_2023_ppp_owin.rds") drug_case_2024_ppp_owin.csr \<- envelope(drug_case_2024_ppp.km, Gest, nsim = 99) write.csv(drug_case_2024_ppp_owin.csr,"data/drug_case_2023_ppp_owin.rds")

plot(drug_case_2016_ppp_owin.csr) plot(drug_case_2017_ppp_owin.csr) plot(drug_case_2018_ppp_owin.csr) plot(drug_case_2019_ppp_owin.csr) plot(drug_case_2020_ppp_owin.csr) plot(drug_case_2021_ppp_owin.csr) plot(drug_case_2022_ppp_owin.csr) plot(drug_case_2023_ppp_owin.csr) plot(drug_case_2024_ppp_owin.csr)

## Spatio-Temporal Point Pattern Analysis by quarter

```{r}
drug_case_2016_q1 <- drug_case %>%
  filter(year== 2016,event_quarter == 20161)
drug_case_2016_q2 <- drug_case %>%
  filter(year== 2016,event_quarter == 20162)
drug_case_2016_q3 <- drug_case %>%
  filter(year== 2016,event_quarter == 20163)
drug_case_2016_q4 <- drug_case %>%
  filter(year== 2016,event_quarter == 20164)
```

```{R}
drug_case_2017_q1 <- drug_case %>%
  filter(year== 2017,event_quarter == 20171)
drug_case_2017_q2 <- drug_case %>%
  filter(year== 2017,event_quarter == 20172)
drug_case_2017_q3 <- drug_case %>%
  filter(year== 2017,event_quarter == 20173)
drug_case_2017_q4 <- drug_case %>%
  filter(year== 2017,event_quarter == 20174)
```

```{R}
drug_case_2018_q1 <- drug_case %>%
  filter(year== 2018,event_quarter == 20181)
drug_case_2018_q2 <- drug_case %>%
  filter(year== 2018,event_quarter == 20182)
drug_case_2018_q3 <- drug_case %>%
  filter(year== 2018,event_quarter == 20183)
drug_case_2018_q4 <- drug_case %>%
  filter(year== 2018,event_quarter == 20184)
```

```{r}
drug_case_2019_q1 <- drug_case %>%
  filter(year== 2019,event_quarter == 20191)
drug_case_2019_q2 <- drug_case %>%
  filter(year== 2019,event_quarter == 20192)
drug_case_2019_q3 <- drug_case %>%
  filter(year== 2019,event_quarter == 20193)
drug_case_2019_q4 <- drug_case %>%
  filter(year== 2019,event_quarter == 20194)
```

```{r}
drug_case_2020_q1 <- drug_case %>%
  filter(year== 2020,event_quarter == 20201)
drug_case_2020_q2 <- drug_case %>%
  filter(year== 2020,event_quarter == 20202)
drug_case_2020_q3 <- drug_case %>%
  filter(year== 2020,event_quarter == 20203)
drug_case_2020_q4 <- drug_case %>%
  filter(year== 2020,event_quarter == 20204)
```

```{R}
drug_case_2021_q1 <- drug_case %>%
  filter(year== 2021,event_quarter == 20211)
drug_case_2021_q2 <- drug_case %>%
  filter(year== 2021,event_quarter == 20212)
drug_case_2021_q3 <- drug_case %>%
  filter(year== 2021,event_quarter == 20213)
drug_case_2021_q4 <- drug_case %>%
  filter(year== 2021,event_quarter == 20214)
```

```{R}
drug_case_2022_q1 <- drug_case%>%
  filter(year== 2022,event_quarter == 20221)
drug_case_2022_q2 <- drug_case%>%
  filter(year== 2022,event_quarter == 20222)
drug_case_2022_q3 <- drug_case%>%
  filter(year== 2022,event_quarter == 20223)
drug_case_2022_q4 <- drug_case%>%
  filter(year== 2022,event_quarter == 20224)
```

```{r}
drug_case_2023_q1 <- drug_case%>%
  filter(year== 2023,event_quarter == 20231)
drug_case_2023_q2 <- drug_case%>%
  filter(year== 2023,event_quarter == 20232)
drug_case_2023_q3 <- drug_case%>%
  filter(year== 2023,event_quarter == 20233)
drug_case_2023_q4 <- drug_case%>%
  filter(year== 2023,event_quarter == 20234)
```

```{r}
drug_case_2024_q1 <- drug_case%>%
  filter(year== 2024,event_quarter == 20241)
drug_case_2024_q2 <- drug_case%>%
  filter(year== 2024,event_quarter == 20242)
```

```{r}
drug_case_2016_ppp1 <- as.ppp(drug_case_2016_q1)
drug_case_2016_ppp2 <- as.ppp(drug_case_2016_q2)
drug_case_2016_ppp3 <- as.ppp(drug_case_2016_q3)
drug_case_2016_ppp4 <- as.ppp(drug_case_2016_q4)
```

```{r}
drug_case_2017_ppp1 <- as.ppp(drug_case_2017_q1)
drug_case_2017_ppp2 <- as.ppp(drug_case_2017_q2)
drug_case_2017_ppp3 <- as.ppp(drug_case_2017_q3)
drug_case_2017_ppp4 <- as.ppp(drug_case_2017_q4)
```

```{R}
drug_case_2018_ppp1 <- as.ppp(drug_case_2018_q1)
drug_case_2018_ppp2 <- as.ppp(drug_case_2018_q2)
drug_case_2018_ppp3 <- as.ppp(drug_case_2018_q3)
drug_case_2018_ppp4 <- as.ppp(drug_case_2018_q4)
```

```{r}
drug_case_2019_ppp1 <- as.ppp(drug_case_2019_q1)
drug_case_2019_ppp2 <- as.ppp(drug_case_2019_q2)
drug_case_2019_ppp3 <- as.ppp(drug_case_2019_q3)
drug_case_2019_ppp4 <- as.ppp(drug_case_2019_q4)
```

```{r}
drug_case_2020_ppp1 <- as.ppp(drug_case_2020_q1)
drug_case_2020_ppp2 <- as.ppp(drug_case_2020_q2)
drug_case_2020_ppp3 <- as.ppp(drug_case_2020_q3)
drug_case_2020_ppp4 <- as.ppp(drug_case_2020_q4)
```

```{R}
drug_case_2021_ppp1 <- as.ppp(drug_case_2021_q1)
drug_case_2021_ppp2 <- as.ppp(drug_case_2021_q2)
drug_case_2021_ppp3 <- as.ppp(drug_case_2021_q3)
drug_case_2021_ppp4 <- as.ppp(drug_case_2021_q4)
```

```{r}
drug_case_2022_ppp1 <- as.ppp(drug_case_2022_q1)
drug_case_2022_ppp2 <- as.ppp(drug_case_2022_q2)
drug_case_2022_ppp3 <- as.ppp(drug_case_2022_q3)
drug_case_2022_ppp4 <- as.ppp(drug_case_2022_q4)
```

```{r}
drug_case_2023_ppp1 <- as.ppp(drug_case_2023_q1)
drug_case_2023_ppp2 <- as.ppp(drug_case_2023_q2)
drug_case_2023_ppp3 <- as.ppp(drug_case_2023_q3)
drug_case_2023_ppp4 <- as.ppp(drug_case_2023_q4)
```

```{R}
drug_case_2024_ppp1 <- as.ppp(drug_case_2024_q1)
drug_case_2024_ppp2 <- as.ppp(drug_case_2024_q2)
```

```{r}
drug_case_2016_ppp1_owin <- drug_case_2016_ppp1[ph_sf_owin]
drug_case_2016_ppp2_owin <- drug_case_2016_ppp2[ph_sf_owin]
drug_case_2016_ppp3_owin <- drug_case_2016_ppp3[ph_sf_owin]
drug_case_2016_ppp4_owin <- drug_case_2016_ppp4[ph_sf_owin]
```

```{r}
drug_case_2017_ppp1_owin <- drug_case_2017_ppp1[ph_sf_owin]
drug_case_2017_ppp2_owin <- drug_case_2017_ppp2[ph_sf_owin]
drug_case_2017_ppp3_owin <- drug_case_2017_ppp3[ph_sf_owin]
drug_case_2017_ppp4_owin <- drug_case_2017_ppp4[ph_sf_owin]
```

```{R}
drug_case_2018_ppp1_owin <- drug_case_2018_ppp1[ph_sf_owin]
drug_case_2018_ppp2_owin <- drug_case_2018_ppp2[ph_sf_owin]
drug_case_2018_ppp3_owin <- drug_case_2018_ppp3[ph_sf_owin]
drug_case_2018_ppp4_owin <- drug_case_2018_ppp4[ph_sf_owin]
```

```{R}
drug_case_2019_ppp1_owin <- drug_case_2019_ppp1[ph_sf_owin]
drug_case_2019_ppp2_owin <- drug_case_2019_ppp2[ph_sf_owin]
drug_case_2019_ppp3_owin <- drug_case_2019_ppp3[ph_sf_owin]
drug_case_2019_ppp4_owin <- drug_case_2019_ppp4[ph_sf_owin]
```

```{r}
drug_case_2020_ppp1_owin <- drug_case_2020_ppp1[ph_sf_owin]
drug_case_2020_ppp2_owin <- drug_case_2020_ppp2[ph_sf_owin]
drug_case_2020_ppp3_owin <- drug_case_2020_ppp3[ph_sf_owin]
drug_case_2020_ppp4_owin <- drug_case_2020_ppp4[ph_sf_owin]
```

```{R}
drug_case_2021_ppp1_owin <- drug_case_2021_ppp1[ph_sf_owin]
drug_case_2021_ppp2_owin <- drug_case_2021_ppp2[ph_sf_owin]
drug_case_2021_ppp3_owin <- drug_case_2021_ppp3[ph_sf_owin]
drug_case_2021_ppp4_owin <- drug_case_2021_ppp4[ph_sf_owin]
```

```{R}
drug_case_2022_ppp1_owin <- drug_case_2022_ppp1[ph_sf_owin]
drug_case_2022_ppp2_owin <- drug_case_2022_ppp2[ph_sf_owin]
drug_case_2022_ppp3_owin <- drug_case_2022_ppp3[ph_sf_owin]
drug_case_2022_ppp4_owin <- drug_case_2022_ppp4[ph_sf_owin]
```

```{R}
drug_case_2023_ppp1_owin <- drug_case_2023_ppp1[ph_sf_owin]
drug_case_2023_ppp2_owin <- drug_case_2023_ppp2[ph_sf_owin]
drug_case_2023_ppp3_owin <- drug_case_2023_ppp3[ph_sf_owin]
drug_case_2023_ppp4_owin <- drug_case_2023_ppp4[ph_sf_owin]
```

```{r}
drug_case_2024_ppp1_owin <- drug_case_2024_ppp1[ph_sf_owin]
drug_case_2024_ppp2_owin <- drug_case_2024_ppp2[ph_sf_owin]
```

```{r}
drug_case_2016_ppp1.km <- rescale.ppp(drug_case_2016_ppp1_owin, 1000, "km")
drug_case_2016_ppp2.km <- rescale.ppp(drug_case_2016_ppp2_owin, 1000, "km")
drug_case_2016_ppp3.km <- rescale.ppp(drug_case_2016_ppp3_owin, 1000, "km")
drug_case_2016_ppp4.km <- rescale.ppp(drug_case_2016_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2017_ppp1.km <- rescale.ppp(drug_case_2017_ppp1_owin, 1000, "km")
drug_case_2017_ppp2.km <- rescale.ppp(drug_case_2017_ppp2_owin, 1000, "km")
drug_case_2017_ppp3.km <- rescale.ppp(drug_case_2017_ppp3_owin, 1000, "km")
drug_case_2017_ppp4.km <- rescale.ppp(drug_case_2017_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2018_ppp1.km <- rescale.ppp(drug_case_2018_ppp1_owin, 1000, "km")
drug_case_2018_ppp2.km <- rescale.ppp(drug_case_2018_ppp2_owin, 1000, "km")
drug_case_2018_ppp3.km <- rescale.ppp(drug_case_2018_ppp3_owin, 1000, "km")
drug_case_2018_ppp4.km <- rescale.ppp(drug_case_2018_ppp4_owin, 1000, "km")
```

```{R}
drug_case_2019_ppp1.km <- rescale.ppp(drug_case_2019_ppp1_owin, 1000, "km")
drug_case_2019_ppp2.km <- rescale.ppp(drug_case_2019_ppp2_owin, 1000, "km")
drug_case_2019_ppp3.km <- rescale.ppp(drug_case_2019_ppp3_owin, 1000, "km")
drug_case_2019_ppp4.km <- rescale.ppp(drug_case_2019_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2020_ppp1.km <- rescale.ppp(drug_case_2020_ppp1_owin, 1000, "km")
drug_case_2020_ppp2.km <- rescale.ppp(drug_case_2020_ppp2_owin, 1000, "km")
drug_case_2020_ppp3.km <- rescale.ppp(drug_case_2020_ppp3_owin, 1000, "km")
drug_case_2020_ppp4.km <- rescale.ppp(drug_case_2020_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2021_ppp1.km <- rescale.ppp(drug_case_2021_ppp1_owin, 1000, "km")
drug_case_2021_ppp2.km <- rescale.ppp(drug_case_2021_ppp2_owin, 1000, "km")
drug_case_2021_ppp3.km <- rescale.ppp(drug_case_2021_ppp3_owin, 1000, "km")
drug_case_2021_ppp4.km <- rescale.ppp(drug_case_2021_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2022_ppp1.km <- rescale.ppp(drug_case_2022_ppp1_owin, 1000, "km")
drug_case_2022_ppp2.km <- rescale.ppp(drug_case_2022_ppp2_owin, 1000, "km")
drug_case_2022_ppp3.km <- rescale.ppp(drug_case_2022_ppp3_owin, 1000, "km")
drug_case_2022_ppp4.km <- rescale.ppp(drug_case_2022_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2023_ppp1.km <- rescale.ppp(drug_case_2023_ppp1_owin, 1000, "km")
drug_case_2023_ppp2.km <- rescale.ppp(drug_case_2023_ppp2_owin, 1000, "km")
drug_case_2023_ppp3.km <- rescale.ppp(drug_case_2023_ppp3_owin, 1000, "km")
drug_case_2023_ppp4.km <- rescale.ppp(drug_case_2023_ppp4_owin, 1000, "km")
```

```{r}
drug_case_2024_ppp1.km <- rescale.ppp(drug_case_2024_ppp1_owin, 1000, "km")
drug_case_2024_ppp2.km <- rescale.ppp(drug_case_2024_ppp2_owin, 1000, "km")
```

drug_case_2016_ppp1.km.csr \<- envelope(drug_case_2016_ppp1.km, Gest, nsim = 99) drug_case_2016_ppp2.km.csr \<- envelope(drug_case_2016_ppp1.km, Gest, nsim = 99) drug_case_2016_ppp3.km.csr \<- envelope(drug_case_2016_ppp1.km, Gest, nsim = 99) drug_case_2016_ppp4.km.csr \<- envelope(drug_case_2016_ppp1.km, Gest, nsim = 99) drug_case_2017_ppp1.km.csr \<- envelope(drug_case_2017_ppp1.km, Gest, nsim = 99) drug_case_2018_ppp2.km.csr \<- envelope(drug_case_2018_ppp1.km, Gest, nsim = 99) drug_case_2019_ppp3.km.csr \<- envelope(drug_case_2019_ppp1.km, Gest, nsim = 99) drug_case_2020_ppp4.km.csr \<- envelope(drug_case_2020_ppp1.km, Gest, nsim = 99) drug_case_2021_ppp1.km.csr \<- envelope(drug_case_2021_ppp1.km, Gest, nsim = 99) drug_case_2022_ppp1.km.csr \<- envelope(drug_case_2022_ppp1.km, Gest, nsim = 99) drug_case_2023_ppp1.km.csr \<- envelope(drug_case_2023_ppp1.km, Gest, nsim = 99) drug_case_2024_ppp1.km.csr \<- envelope(drug_case_2024_ppp1.km, Gest, nsim = 99)

plot(drug_case_2016_ppp1.km.csr)

## Spatio-Temporal Point Pattern Analysis by month

```{r}
drug_case_2016_1 <- drug_case %>%
  filter(year== 2016, event_month == 201601)
```

transform them into ppp objects.

```{r}
drug_case_2016_1_ppp <- as.ppp(drug_case_2016_1)
```

combine

```{r}
drug_case_2016_1_ppp <- drug_case_2016_1_ppp[ph_sf_owin]
```

```{r}
drug_case_2016_1_ppp.km <- rescale.ppp(drug_case_2016_1_ppp, 1000, "km")
```

drug_case_2016_ppp_owin.csr \<- envelope(drug_case_2016_ppp.km, Gest, nsim = 99) plot(drug_case_2016_ppp_owin.csr) Filtering data

## ShinyApp Storyboard

In my part, I did three main things to analyze the case of drugs according to chronological order, 1st Order Spatial Point Patterns Analysis Methods and Spatio-Temporal Point Pattern Analysis \### GeoVisualisation In this section, the first thing I did was GeoVisualisation, and on shiny I set it up so that I could freely adjust the different dates according to the year and different months, making it easy for users to compare and view. ![](data/WechatIMG31.jpg)

### Time Series Analysis

In the Time Series Analysis module, the user can choose to view a quarterly or monthly histogram of the number of cases in the drop-down menu. Currently the Histogram tab shows the Annual Case Frequency Histogram, click on the Time Series Plot to view specific tabs according to the user's needs.

![](data/WechatIMG33.jpg)

### 1st Order Spatial Point Patterns Analysis Methods

This page shows the “First-order Analysis” module in the user's Shiny application, which is used to analyze drug abuse data in the Philippines for the period 2016-2024. On the left side of the page, there are two checkboxes for selecting the year and quarter of the analysis, and a “Run First-order Analysis” button for performing the analysis.

The graph on the right shows the results of the analysis, presented as a density map generated by Kernel Density Estimation (KDE), showing the spatial density distribution of drug abuse incidents in different regions. The color gradient from blue to yellow indicates the level of density, with the closer the color is to yellow the higher the density. This map helps to identify geographically high incidence areas of drug abuse incidents.

By selecting different years and quarters, users can analyze the data spatially and temporally to observe the changes in the spatial distribution of drug abuse incidents over a specific time period. ![](data/WechatIMG34.jpg)

### Spatio-Temporal Point Pattern Analysis

The Second-order Analysis page allows you to select a year, quarter, or month, and you can choose a specific time period to analyze in order to target a certain period of drug abuse. Meanwhile, the page provides different analysis functions, such as the G function, so that you can choose the appropriate function to analyze according to the purpose of the study. Click on the “Run Second-order Analysis” button to start the selected analysis.(The images below are not yet counted to show the corresponding images) ![](data/WechatIMG35.jpg)
