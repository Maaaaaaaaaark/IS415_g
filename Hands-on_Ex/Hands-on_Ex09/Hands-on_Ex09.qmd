---
title: "Hands-on exercise09"
author: "Yuheng Liang"
format: html
editor: visual
date: "Oct 22, 2024"
date-modified: "Oct 22, 2024"
execute: 
  eval: true
  echo: true
  freeze: true
---

# Hands-on exercise09

## 1.0 The data
### 1.1package
```{r}
pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)
```
### 1.2 Geospatial Data Wrangling
importing geospatial data
```{r}
mpsz = st_read(dsn = "data/geospatial", layer= "MP14_SUBZONE_WEB_PL")
```
#### 1.2.1updating CRS information
The code chunk below updates the newly imported mpsz with the correct ESPG code
```{r}
mpsz_svy21 <- st_transform(mpsz,3414)
```

varify the newly transformed mpsz_svy21
```{r}
st_crs(mpsz_svy21)
```
the EPSG is 3414

reveal the extent
```{r}
st_bbox(mpsz_svy21)
```
### 1.3 Aspatial Data warning
#### 1.3.1Importing the aspatial data
```{r}
condo_resale = read_csv("data/aspatial/Condo_resale_2015.csv")
```
display the data structure
```{r}
glimpse(condo_resale)
```
```{r}
head(condo_resale$LONGITUDE)
```
```{r}
head(condo_resale$LATITUDE)
```
display the summary statistics
```{r}
summary(condo_resale)
```
#### 1.3.2 Converting aspatial data frame into a sf object
convert the condo_resale tibble data frame into sf object
```{r}
condo_resale.sf <- st_as_sf(condo_resale,
                            coords = c("LONGITUDE", "LATITUDE"),
                            crs=4326)%>%
  st_transform(crs=3414)
```
 convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).
 
list the content
```{r}
head(condo_resale.sf)
```
## 2.0 Exploratory Data Analysis
### 2.1 EDA using statistical graphics
```{r}
ggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")
```
The figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.

Statistically, the skewed dsitribution can be normalised by using log transformation.
The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.

```{r}
condo_resale.sf <- condo_resale.sf%>%
  mutate(`LOG_SELLING_PRICE`=log(SELLING_PRICE))
```

plot it
```{r}
ggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")
```
### 2.2 Multiple Histogram Plots distribution of variables
draw a small multiple histograms

creat 12 histograms
```{r}
AREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + 
  geom_histogram(bins=20, color="black", fill="light blue")

AGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + 
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, 
                               aes(x= `PROX_URA_GROWTH_AREA`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, 
                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

ggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, 
          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,
          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  
          ncol = 3, nrow = 4)
```
### 2.3 Drawing Statistical Point Map
trun on the interactive mode of tmap
```{r}
tmap_mode("view")
```
create an interactive point symbol map
```{r}
tm_shape(mpsz_svy21)+
  tm_polygons() +
tm_shape(condo_resale.sf) +  
  tm_dots(col = "SELLING_PRICE",
          alpha = 0.6,
          style="quantile") +
  tm_view(set.zoom.limits = c(11,14))+
  tmap_options(check.and.fix = TRUE)
```
