{
  "hash": "dc64775c2e69ff2d8e19e3b0c6830946",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home_Ex02\"\nauthor: \"Yuheng Liang\"\nformat: html\neditor: visual\ndate: \"September 24, 2024\"\ndate-modified: \"Oct 1,2024\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Take home exe2\n\n## 1.0Setting the Analytical Tools\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf,spdep,tmap,tidyverse,dplyr)\n```\n:::\n\n\n## 2.0 Getting the data into R Environment\n\n### 2.1 Import shapefile into r environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nThailand_Map <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/liangyuhang/Downloads/Maaaaaaaaaark/IS415_g/Take-home_Ex/Take-home_Ex02/data/tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n### 2.2 Import. csv file into r environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nThailand <- read_csv(\"data/archive/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n### 2.3 data marning\n\nleft join the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nThailand_Map_Drug <- left_join(Thailand_Map, Thailand, by = c(\"ADM1_EN\" = \"province_en\"))%>%\n  select(3,17,18,19,21)\n```\n:::\n\n\nflit the drug abuse data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(Thailand_Map_Drug$types_of_drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n[17] NA                                                      \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThailand_Map_Drug <- subset(Thailand_Map_Drug, types_of_drug_offenses == \"drug_use_cases\")\n```\n:::\n\n\nVisualising the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequal <- tm_shape(Thailand_Map_Drug) +\n  tm_fill(\"no_cases\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"interval classification\",legend.width = 0.5)\n\nquantile <- tm_shape(Thailand_Map_Drug) +\n  tm_fill(\"no_cases\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"quantile classification\",legend.width = 0.5)\n\ntmap_arrange(equal, \n             quantile)\n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## 3.0 Global Measures of Spatial Autocorrelation\n\n### 3.1 Computing Contiguity Spatial Weights\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- poly2nb(Thailand_Map_Drug, \n                queen=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in poly2nb(Thailand_Map_Drug, queen = TRUE): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 450 \nNumber of nonzero links: 14130 \nPercentage nonzero weights: 6.977778 \nAverage number of links: 31.4 \n2 disjoint connected subgraphs\nLink number distribution:\n\n  5  11  17  23  29  35  41  47  53  59 \n  6   6  36 108  84  96  66  30   6  12 \n6 least connected regions:\n6147 6148 6149 6150 6151 6152 with 5 links\n12 most connected regions:\n2499 2500 2501 2502 2503 2504 4611 4612 4613 4614 4615 4616 with 59 links\n```\n\n\n:::\n:::\n\n\nThe summary report above shows that there are 450 area units in Thailand. The most connected area unit has 12 neighbours. There are 6 area units with only 5 neighbours.\n\n## Row-standardised weights matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 450 \nNumber of nonzero links: 14130 \nPercentage nonzero weights: 6.977778 \nAverage number of links: 31.4 \n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 450 202500 450 32.41275 1833.241\n```\n\n\n:::\n:::\n\n\n## Global Measures of Spatial Autocorrelation: Moran’s I\n\n### Maron’s I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(Thailand_Map_Drug$no_cases, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  Thailand_Map_Drug$no_cases  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 13.215, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1573096432     -0.0022271715      0.0001457534 \n```\n\n\n:::\n:::\n\n\nThe p-value is extremely small, suggesting that the result is highly significant.Moran I statistic, indicating the degree of positive spatial autocorrelation under the given weights. A positive value suggests that high-value areas tend to cluster together.The alternative hypothesi is greater indicates the alternative hypothesis, focusing on positive autocorrelation, meaning that areas with a high number of cases are likely to be adjacent to other areas with a high number of cases.\n\n### Computing Monte Carlo Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm= moran.mc(Thailand_Map_Drug$no_cases, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  Thailand_Map_Drug$no_cases \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.15731, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nThe output indicates strong evidence of positive spatial autocorrelation in the case numbers across the regions in Thailand.And the output of the p-value mean that it is not generate by random. The observed Moran's I value is significantly higher than what would be expected by chance, suggesting that regions with high case numbers are clustering together.\n\n### Visualising Monte Carlo Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0.15731, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThe histogram displays the distribution of simulated Moran's I values, most of which are close to zero.As fot the observed Moran's I (0.15731) is far greater than these simulated values, falling in the extreme right tail of the distribution, as shown in the histogram.The p-value (0.001) and the observed rank of 1000 indicate that this observed spatial autocorrelation is highly significant, confirming that drug use cases are spatially clustered in Thailand rather than randomly distributed.\n\n## Global Measures of Spatial Autocorrelation: Geary’s C\n\n### Geary’s C test\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(Thailand_Map_Drug$no_cases, listw=rswm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  Thailand_Map_Drug$no_cases \nweights: rswm_q   \n\nGeary C statistic standard deviate = 4.0279, p-value = 2.814e-05\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n     0.8915381430      1.0000000000      0.0007250873 \n```\n\n\n:::\n:::\n\n\nThe calculated Geary C statistic is 0.8915. This value is less than 1, indicating that the sample exhibits positive spatial autocorrelation, meaning that nearby areas tend to have similar case counts.The p-value is 2.814e-05 (or 0.00002814), which is very small and indicates that the result is statistically significant. Generally, if the p-value is less than 0.05, we can reject the null hypothesis, suggesting significant spatial autocorrelation exists.Overall, these results indicate that in the context of drug cases in Thailand, the spatial distribution of cases is not random but shows significant positive spatial autocorrelation.\n\n### Computing Monte Carlo Geary’s C\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm=geary.mc(Thailand_Map_Drug$no_cases, \n               listw=rswm_q, \n               nsim=999)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  Thailand_Map_Drug$no_cases \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.89154, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\nThe calculated Geary C statistic is 0.89154. This value indicates positive spatial autocorrelation in the sample, meaning that nearby areas tend to have similar case counts.The p-value is 0.001, which is very small and indicates that the result is statistically significant. Overall, these results suggest that in the context of drug cases in Thailand, the spatial distribution of cases is not random but shows significant positive spatial autocorrelation.\n\n### Visualising the Monte Carlo Geary’s C\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=0.89154, col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThe observed spatial autocorrelation is stronger than what would be expected by random chance. This suggests that the distribution of cases is not random, indicating a clustering effect in your data. Overall, this aligns with your previous analysis, highlighting the presence of important spatial influencing factors in your dataset.\n\n## Spatial Correlogram\n\n### Compute Moran’s I correlogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMI_corr <- sp.correlogram(wm_q, \n                          Thailand_Map_Drug$no_cases, \n                          order=10, \n                          method=\"I\", \n                          style=\"W\",\n                          zero.policy = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 1 neighbour object has 2\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 2 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 3 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 4 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 5 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 6 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 7 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 8 neighbour object has 9\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 9 neighbour object has 19\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 10 neighbour object has 49\nsub-graphs\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(MI_corr)\n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nStrong Autocorrelation Among First-Order Neighbors： The Moran's I value for first-order neighbors (order = 1) is approximately 0.15 in the Correlogram. This suggests that there is a spatial clustering effect in certain areas where the number of drug offenses is high, indicating that high-case areas are located close to each other. Decreasing Autocorrelation with Increased Distance: As increase the order of neighbors (for example, to order = 5), the Moran's I values in the Correlogram approach 0. This indicates that there is no significant spatial correlation among areas that are farther away from these clustered regions. In other words, as you move away from these high-case areas, the distribution of drug offenses becomes increasingly random.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(MI_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for Thailand_Map_Drug$no_cases \nmethod: Moran's I\n            estimate expectation    variance standard deviate Pr(I) two sided\n1 (450)   1.5731e-01 -2.2272e-03  1.4575e-04          13.2145       < 2.2e-16\n2 (444)  -4.0391e-02 -2.2573e-03  1.0508e-04          -3.7199       0.0001993\n3 (444)  -3.3936e-02 -2.2573e-03  8.5696e-05          -3.4221       0.0006214\n4 (444)   1.7777e-02 -2.2573e-03  8.8783e-05           2.1263       0.0334809\n5 (444)  -1.2165e-02 -2.2573e-03  9.3793e-05          -1.0231       0.3062732\n6 (444)  -6.1258e-03 -2.2573e-03  1.1744e-04          -0.3570       0.7211180\n7 (444)  -4.9293e-02 -2.2573e-03  1.6343e-04          -3.6793       0.0002339\n8 (444)   7.2810e-03 -2.2573e-03  2.0072e-04           0.6732       0.5007913\n9 (438)  -7.3029e-03 -2.2883e-03  2.2680e-04          -0.3330       0.7391557\n10 (408) -5.2020e-03 -2.4570e-03  2.3266e-04          -0.1800       0.8571795\n            \n1 (450)  ***\n2 (444)  ***\n3 (444)  ***\n4 (444)  *  \n5 (444)     \n6 (444)     \n7 (444)  ***\n8 (444)     \n9 (438)     \n10 (408)    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n### **Compute Geary’s C correlogram and plot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGC_corr <- sp.correlogram(wm_q, \n                          Thailand_Map_Drug$no_cases, \n                          order=10, \n                          method=\"C\", \n                          style=\"W\",\n                          zero.policy = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 1 neighbour object has 2\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 2 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 3 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 4 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 5 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 6 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 7 neighbour object has 7\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 8 neighbour object has 9\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 9 neighbour object has 19\nsub-graphs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in nblag(neighbours, maxlag = order): lag 10 neighbour object has 49\nsub-graphs\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(GC_corr)\n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(GC_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for Thailand_Map_Drug$no_cases \nmethod: Geary's C\n           estimate expectation   variance standard deviate Pr(I) two sided    \n1 (450)  0.89153814  1.00000000 0.00072509          -4.0279       5.627e-05 ***\n2 (444)  1.09395639  1.00000000 0.00108188           2.8565        0.004283 ** \n3 (444)  0.97411571  1.00000000 0.00115702          -0.7610        0.446677    \n4 (444)  0.89941590  1.00000000 0.00227911          -2.1069        0.035125 *  \n5 (444)  0.98071039  1.00000000 0.00369355          -0.3174        0.750943    \n6 (444)  0.96120901  1.00000000 0.00620021          -0.4926        0.622268    \n7 (444)  1.02272331  1.00000000 0.01092993           0.2174        0.827934    \n8 (444)  1.04350655  1.00000000 0.01510478           0.3540        0.723342    \n9 (438)  1.00070260  1.00000000 0.01639252           0.0055        0.995622    \n10 (408) 0.83840972  1.00000000 0.01682899          -1.2456        0.212903    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\nIn Moran's I results, the first-order neighbors show positive spatial autocorrelation. Similarly, the Geary's C results indicate that there is positive spatial autocorrelation at smaller lags. Both indicate that drug abuse cases are spatially clustered in local areas.\\\nMoran's I approaches 0 as the lag number increases, which is consistent with the trend in Geary's C, i.e., spatial autocorrelation weakens as the lag increases. This suggests that areas farther from the clustered regions tend to be distributed randomly, and both statistics point to an insignificant global spatial autocorrelation.\n\n## Local Indicators of Spatial Association(LISA)\n\n### Computing local Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(Thailand_Map_Drug$no_cases)\nlocalMI <- localmoran(Thailand_Map_Drug$no_cases, rswm_q)\nhead(localMI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Ii          E.Ii      Var.Ii     Z.Ii Pr(z != E(Ii))\n1 2.0031708 -0.0518028694 0.490979386 2.932747   0.0033597734\n2 2.5496777 -0.1114307739 0.989708320 2.674909   0.0074749594\n3 2.4083949 -0.0907523063 0.824803860 2.751798   0.0059269124\n4 1.6642394 -0.0317291756 0.307090542 3.060445   0.0022100831\n5 1.6473179 -0.0309216368 0.299524380 3.066464   0.0021660691\n6 0.1946443 -0.0003074004 0.003071721 3.517517   0.0004356039\n```\n\n\n:::\n:::\n\n### Mapping the local Moran’s I\n\n::: {.cell}\n\n```{.r .cell-code}\nThailand.localMI <- cbind(Thailand_Map_Drug,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(Thailand.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n### Mapping local Moran’s I p-values\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(Thailand.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.width = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}