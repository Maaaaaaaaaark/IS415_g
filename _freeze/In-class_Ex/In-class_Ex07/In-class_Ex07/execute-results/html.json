{
  "hash": "d85c1f4551ccda5f0fdd532e69650cf3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Ex09\"\nauthor: \"Yuheng Liang\"\nformat: html\neditor: visual\ndate: \"Oct 14, 2024\"\ndate-modified: \"Oct 21,2024\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n# In class exe09\n## Loading R package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep,sp,tmap,sf,ClustGeo,cluster,factoextra,NbClust,tidyverse,GGally)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf<- read_rds(\"data/rds/shan_sf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict <- read_rds(\"data/rds/shan_ict.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- read_rds(\"data/rds/shan_sf_cluster.rds\")\n```\n:::\n\n\n## Conventional Hierarchical Clustering\nHierachical clustering\n\n::: {.cell}\n\n```{.r .cell-code}\npromat <- dist(shan_ict,method='euclidean')\nhclust_ward <- hclust(promat,method='ward.D')\ngroups <- as.factor(cutree(hclust_ward,k=6))\n```\n:::\n\n\nAppend to the geospatial data\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf,as.matrix(groups))%>%\n  rename(`CLUSTER`=`as.matrix.groups.`)%>%\n  select(-c(3:4,7:9))%>%\n  rename(TS = TS.x)\n```\n:::\n\nThe dendogram\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward,cex=0.6)\nrect.hclust(hclust_ward,k=6,border=2:5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\ncluster map\nonly 16 class\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster,'CLUSTER')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n## Spatially Constrained Clustering :SkATER Method\nstep1:\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sf)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\nVisualising the neighbours\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf),\n     border=grey(.5))\npts <- st_coordinates(st_centroid(shan_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_centroid assumes attributes are constant over geometries\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(shan.nb,pts,col=\"blue\",add=TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nComputing minimum spanning tree\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n\nVisualising MST\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb,\n                   lcosts,style = \"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n\nComputing minimum spanning tree\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <- mstree(shan.w)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf),\n     border=gray(.5))\nplot.mst(shan.mst,\n         pts,\n         col=\"blue\",\n         cex.lab=0.7,\n         cex.circles = 0.005,\n         add=TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Computing Spatially constrained clusters using SKATER \n\n::: {.cell}\n\n```{.r .cell-code}\nskater.clust6 <- skater(edges = shan.mst[,1:2],\n                        data = shan_ict,\n                        method = \"euclidean\",\n                        ncuts=5)\n```\n:::\n\n\nthe code to plot skater tree\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf),\n     borders=gray(.5))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in title(...): \"borders\" is not a graphical parameter\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(skater.clust6,\n     pts,\n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\",\"brown\",\"pink\"),\n     cex.clrcles=0.005,\n     add=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in symbols(coords[, 1], coords[, 2], circles = rep(cex.circles, :\n\"cex.clrcles\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"cex.clrcles\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"cex.clrcles\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"cex.clrcles\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"cex.clrcles\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nVisualising the clusters in choropleth map\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster,as.factor(groups_mat))%>%\n  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster,\"skater_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Spatially Constrained Clustering : CLustGeo\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf,shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(promat, distmat,range.alpha = seq(0,1,0.1),\n                  K=6, graph = TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclustG <- hclustgeo(promat,distmat,alpha = 0.2)\ngroups <- as.factor(cutree(clustG,k=6))\nshan_sf_clustGeo <- cbind(shan_sf,as.matrix(groups))%>%\n  rename(`clustGeo` = `as.matrix.groups.`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_clustGeo,\"clustGeo\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data=shan_sf_clustGeo,\n           columns = c(17:21),\n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"1\")+\n  facet_grid(~clustGeo)+\n  theme(axis.text.x=element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}