---
title: "In-class_Ex09"
author: "Yuheng Liang"
format: html
editor: visual
date: "Oct 14, 2024"
date-modified: "Oct 21,2024"
execute: 
  eval: true
  echo: true
  freeze: true
---
# In class exe09
## Loading R package

```{r}
pacman::p_load(spdep,sp,tmap,sf,ClustGeo,cluster,factoextra,NbClust,tidyverse,GGally)
```

```{r}
shan_sf<- read_rds("data/rds/shan_sf.rds")
```

```{r}
shan_ict <- read_rds("data/rds/shan_ict.rds")
```

```{r}
shan_sf_cluster <- read_rds("data/rds/shan_sf_cluster.rds")
```

## Conventional Hierarchical Clustering
Hierachical clustering
```{r}
promat <- dist(shan_ict,method='euclidean')
hclust_ward <- hclust(promat,method='ward.D')
groups <- as.factor(cutree(hclust_ward,k=6))
```

Append to the geospatial data
```{r}
shan_sf_cluster <- cbind(shan_sf,as.matrix(groups))%>%
  rename(`CLUSTER`=`as.matrix.groups.`)%>%
  select(-c(3:4,7:9))%>%
  rename(TS = TS.x)
```
The dendogram
```{r}
plot(hclust_ward,cex=0.6)
rect.hclust(hclust_ward,k=6,border=2:5)
```

cluster map
only 16 class
```{r}
qtm(shan_sf_cluster,'CLUSTER')
```
## Spatially Constrained Clustering :SkATER Method
step1:
```{r}
shan.nb <- poly2nb(shan_sf)
summary(shan.nb)
```
Visualising the neighbours
```{r}
plot(st_geometry(shan_sf),
     border=grey(.5))
pts <- st_coordinates(st_centroid(shan_sf))
plot(shan.nb,pts,col="blue",add=TRUE)
```

Computing minimum spanning tree
```{r}
lcosts <- nbcosts(shan.nb, shan_ict)
```

Visualising MST
```{r}
shan.w <- nb2listw(shan.nb,
                   lcosts,style = "B")
summary(shan.w)
```

Computing minimum spanning tree
```{r}
shan.mst <- mstree(shan.w)
```

```{r}
plot(st_geometry(shan_sf),
     border=gray(.5))
plot.mst(shan.mst,
         pts,
         col="blue",
         cex.lab=0.7,
         cex.circles = 0.005,
         add=TRUE)
```

## Computing Spatially constrained clusters using SKATER 
```{R}
skater.clust6 <- skater(edges = shan.mst[,1:2],
                        data = shan_ict,
                        method = "euclidean",
                        ncuts=5)
```

the code to plot skater tree
```{r}
plot(st_geometry(shan_sf),
     borders=gray(.5))
plot(skater.clust6,
     pts,
     cex.lab=.7,
     groups.colors=c("red","green","blue","brown","pink"),
     cex.clrcles=0.005,
     add=TRUE)
```

Visualising the clusters in choropleth map
```{r}
groups_mat <- as.matrix(skater.clust6$groups)
shan_sf_spatialcluster <- cbind(shan_sf_cluster,as.factor(groups_mat))%>%
  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)
qtm(shan_sf_spatialcluster,"skater_CLUSTER")
```

## Spatially Constrained Clustering : CLustGeo
```{r}
dist <- st_distance(shan_sf,shan_sf)
distmat <- as.dist(dist)
```

```{r}
cr <- choicealpha(promat, distmat,range.alpha = seq(0,1,0.1),
                  K=6, graph = TRUE)
```

```{r}
clustG <- hclustgeo(promat,distmat,alpha = 0.2)
groups <- as.factor(cutree(clustG,k=6))
shan_sf_clustGeo <- cbind(shan_sf,as.matrix(groups))%>%
  rename(`clustGeo` = `as.matrix.groups.`)
```

```{r}
qtm(shan_sf_clustGeo,"clustGeo")
```

```{r}
ggparcoord(data=shan_sf_clustGeo,
           columns = c(17:21),
           scale = "globalminmax",
           alphaLines = 0.2,
           boxplot = TRUE,
           title = "1")+
  facet_grid(~clustGeo)+
  theme(axis.text.x=element_text(angle = 30))
```
