---
title: "In-class_Ex12"
author: "Yuheng Liang"
format: html
editor: visual
date: "Nov 11, 2024"
date-modified: "Nov 11, 2024"
execute: 
  eval: true
  echo: true
  freeze: true
---


# In class ex12
##Package and data
```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, 
               tmap, rsample, yardstick, tidyverse,
               knitr, kableExtra, spatialRF)
```
Preparing Data
```{R}
mdata <- read_rds("data/mdata.rds")
```
Data sampling
```{R}
set.seed(1234)
HDB_sample <- mdata%>%
  sample_n(1500)
```
check for overlapping point
```{r}
overlapping_points <- HDB_sample%>%
  mutate(overlap = lengths(st_equals(.,.))>1)
summary(overlapping_points$overlap)
```
Spatial jittle
```{r}
HDB_sample <- HDB_sample%>%
  st_jitter(amount = 5)
```

## Data sampling
```{R}
set.seed(1234)
resale_spilt <- initial_split(HDB_sample,
                              prop = 6.67/10,)
train_data <- training(resale_spilt)
test_data <- testing(resale_spilt)
```

```{r}
write_rds(train_data,"data/train_data.rds")
write_rds(test_data,"data/test_data.rds")
```

Multicollinearity check
```{r}
mdata_nogeo <- mdata %>%
  st_drop_geometry()
ggstatsplot::ggcorrmat(mdata_nogeo[,2:17])
```
## Building a non-spatial multiple linear regression
```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data=train_data)
summary(price_mlr)
```
## Multicollinearity check with VIF
```{r}
vif <- performance::check_collinearity(price_mlr)
kable(vif, 
      caption = "Variance Inflation Factor (VIF) Results") %>%
  kable_styling(font_size = 18) 
```              
model calibration
```{r}
gwr_bw_train_ad <- bw.gwr(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  data=train_data,
                  approach="CV",
                  kernel="gaussian",
                  adaptive=TRUE,
                  longlat=FALSE)
gwr_bw_train_ad
```
```{r}
gwr_ad <- gwr.basic(formula = resale_price ~ floor_area_sqm +
                      storey_order + remaining_lease_mths + 
                      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                      PROX_MRT + PROX_PARK + PROX_MALL +
                      PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                      WITHIN_1KM_PRISCH,
                    data=train_data,
                    bw=20, 
                    kernel = 'gaussian', 
                    adaptive=TRUE,
                    longlat = FALSE)
gwr_ad
```
```{r}
gwr_bw_test_ad <- bw.gwr(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  data=test_data,
                  approach="CV",
                  kernel="gaussian",
                  adaptive=TRUE,
                  longlat=FALSE)
gwr_bw_test_ad
```


```{R}
gwr_pred = gwr.predict(formula = resale_price ~ floor_area_sqm + storey_order + 
                     remaining_lease_mths +
                     PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + 
              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + 
              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + 
              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,
              data = train_data,
              predictdata = test_data,
              bw = 20,
              kernel = "gaussian",
              adaptive = TRUE,
              longlat = FALSE)
gwr_pred
```

```{r}
gwr_pred_df = as.data.frame(gwr_pred$SDF$prediction) %>%
  rename(gwr_pred = "gwr_pred$SDF$prediction")
```

## predict Modelling with RF method
extract th coordinates of training and test data sets
```{r}
coords <- st_coordinates(HDB_sample)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

drop the geometry column of both training and test data set
```{R}
train_data_nogeom <- train_data%>%
  st_drop_geometry()
```

```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm + storey_order + 
               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + 
               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + 
               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + 
               WITHIN_1KM_PRISCH,
             data=train_data_nogeom)
rf
```


```{R}
test_data_nogeom = cbind(test_data, coords_test) %>% st_drop_geometry()
```

```{R}
rf_pred = predict(rf, data = test_data_nogeom)
```

```{R}
rf_pred_df = as.data.frame(rf_pred$predictions) %>%
  rename(rf_pred = "rf_pred$predictions")
```

## Predictive Modelling with SpatialML

```{R}
set.seed(1234)
grf_ad <- grf(formula = resale_price ~ floor_area_sqm + storey_order +
                remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + 
                PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + 
                PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                WITHIN_1KM_PRISCH,
              dframe=train_data_nogeom, 
              bw=20,
              kernel="adaptive",
              coords=coords_train)
grf_ad
```

```{r}
test_data_nogeom <- cbind(
  test_data, coords_test) %>%
  st_drop_geometry()
```


```{r}
grf_pred = predict.grf(grf_ad, test_data_nogeom,
                       x.var.name = "X",
                       y.var.name = "Y",
                       local.w = 1,
                       global.w = 0)
```

```{R}
grf_pred_df = as.data.frame(grf_pred)
```


## Model Comparison
```{R}
test_data_pred <- test_data %>%
  select(resale_price) %>%
  cbind(gwr_pred_df) %>%
  cbind(rf_pred_df) %>%
  cbind(grf_pred_df)
```


model Comparison Plots
```{r}
test_longer <- test_data_pred%>%
  st_drop_geometry()%>%
  pivot_longer(cols = ends_with("pred"),
               names_to = "model",
               values_to = "predcted")
```

```{r}
model_labels <- c(
  gwr_pred = "gwr",
  rf_pred = "Random Forest",
  grf_pred = "gwRF")

test_longer <- test_longer %>%
  mutate(model = recode(
    model, !!!model_labels))
```

## Variable Importance
```{R}
var_imp <- data.frame(
  Variable = names(grf_ad$Global.Model$variable.importance),
  Importance = grf_ad$Global.Model$variable.importance
)
```

```{r}
ggplot(var_imp, aes(x = reorder(Variable, 
                                Importance), 
                    y = Importance)) +
  geom_bar(stat = "identity", 
           fill = "skyblue") +
  coord_flip() +
  labs(
    title = "Variable Importance from Ranger Model",
    x = "Variables",
    y = "Importance"
  ) +
  theme_minimal()
```
